// sample picoMIPS program 1
// n = 8 bits, Isize = 16+n = 24 bits
// format: 6b opcode, 5b %d, 5b %s, 8b immediate or address
// 
// HEX /////////// BINARY  ///////////////////// ASSEMBLER /////////
080000     // 24'b000010_00000_00000_00000000; //MULI 0 //CLEAR %0
0C0001	   // 24'b000011_00000_00000_00000001; //B 0 PC=1
000080	   // 24'b000000_00000_00000_10000000; //ADD  %0; %0 = inport x1
002080	   // 24'b000000_00001_00000_10000000; //ADD  %1; %1 = inport x1
0C0084	   // 24'b000011_00000_00000_10000100; //B 1 PC=4
0C0005	   // 24'b000011_00000_00000_00000101; //B 0 PC=5
004080	   // 24'b000000_00010_00000_10000000; //ADD  %2; %2 = inport y1
006080	   // 24'b000000_00011_00000_10000000; //ADD  %3; %3 = inport y1
0C0088	   // 24'b000011_00000_00000_10001000; //B 1 PC=8
080060     // 24'b000010_00000_00000_01100000; //MULI %0, %0, 0.75; %0 = %0 * 0.75 // 0.75x1
0821C0	   // 24'b000010_00001_00001_11000000; //MULI %1, %1, -0.5; %1 = %1 * -0.5 // -0.5x1
084240	   // 24'b000010_00010_00010_01000000; //MULI %2, %2, 0.5; %2 = %2 * 0.5 // 0.5y1
086360	   // 24'b000010_00011_00011_01100000; //MULI %3, %3, 0.5; %3 = %3 * 0.75 // 0.75y1
000200	   // 24'b000000_00000_00010_00000000; //ADD %0, %2; %0 = %0 + %2 // 0.75x1 + 0.5y1
006100	   // 24'b000000_00011_00001_00000000; //ADD %3, %1; %3 = %3 + %1 // 0.75y1 - 0.5x1
040014	   // 24'b000001_00000_00000_00010100; //ADDI %0, 20; //%0 = %0 + 20 //x2 = 0.75x1 + 0.5y1 + 20
0C0010	   // 24'b000011_00000_00000_00010000; //B 0 PC = 16
080000	   // 24'b000010_00000_00000_00000000; //MULI 0 //CLEAR %0
0460EC	   // 24'b000001_00011_00000_11101100; //ADDI %3, -20; //%3 = %3 + -20 //y2 = 0.75x1 + 0.5y1 + 20
000300	   // 24'b000000_00000_00011_00000000; //ADD %0, %3; %0 = %0 + %3 //y2 = 0.75x1 + 0.5y1 + 20 
0400EC	   // 24'b000001_00000_00000_11101100; //ADDI %0, -20; //%0 = %0 - 20 //DISP
0C0094	   // 24'b000011_00000_00000_10010100; //B 1 PC = 20
		  